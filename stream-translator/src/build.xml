<?xml version="1.0" encoding="UTF-8"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="mapster">
    <property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>

	<!-- Related project build files -->
	<property name="sds-ws.project" location="../StreamingDataService"/>
	
	<!-- Jar Library -->
	<property name="lib" value="${basedir}/lib"/>

	<!-- Setup server properties -->
   	<property name="target.classes.dir" value ="build/classes"/>
   	<property name="target.gen.dir" value ="build/generated-sources"/>
	<property name="service.src.dir" value="src"/>
	<property name="web" value="WebContent/WEB-INF"/>
	<property name="web.lib" value="${web}/lib"/>

	<!-- Service properties -->
	<property name="src.wsdl.location" value="${sds-ws.project}/wsdl"/>
	<property name="src.service.location" value="service"/>
	<property name="wsdl.location" value="wsdl"/>
   	<property name="war.name" value="CCO.war"/>

   	<path id="cxf.classpath">
      	<pathelement location="${target.classes.dir}"/>
      	<fileset dir="${env.CXF_HOME}/lib">
         	<include name="*.jar"/>
      	</fileset>
   	</path>

	
    <path id="mapster.classpath">
        <pathelement location="bin"/>
        <pathelement location="lib/arq-sparql.jar"/>
        <pathelement location="lib/cayenne-nodeps.jar"/>
        <pathelement location="lib/commons-digester.jar"/>
        <pathelement location="lib/icu4j_3_4.jar"/>
        <pathelement location="lib/iri.jar"/>
        <pathelement location="lib/jakarta-regexp-1.3.jar"/>
        <pathelement location="lib/jena.jar"/>
        <pathelement location="lib/jep-2.3.1.jar"/>
        <pathelement location="lib/junit-4.5.jar"/>
        <pathelement location="lib/log4j-1.2.15.jar"/>
        <pathelement location="lib/lucene-core-2.3.1.jar"/>
        <pathelement location="lib/slf4j-log4j12-1.5.6.jar"/>
        <pathelement location="lib/xercesImpl.jar"/>
        <pathelement location="lib/slf4j-api-1.5.6.jar"/>
        <pathelement location="lib/antlr-2.7.5.jar"/>
        <pathelement location="lib/EventSNEE.jar"/>
    	<pathelement location="lib/sparqlresult.jar"/>
    	<pathelement location="lib/jakarta-oro-2.0.8.jar"/>
    </path>
    <target name="init">
        <!--<mkdir dir="bin"/>-->
    	<copy todir="lib" file="EventSNEE.jar">
    		
    	</copy>
    	
        <copy includeemptydirs="false" todir="${target.classes.dir}">
            <fileset dir="src" excludes="**/*.launch, **/*.java"/>
        </copy>
    	
		<copy todir="${wsdl.location}">
			<fileset dir="${src.wsdl.location}">
				<include name="**/*"/>
			</fileset>
			<fileset dir="${src.service.location}">
				<include name="**/*"/>
			</fileset>			
		</copy>
    	
    </target>
    <target name="clean">
        <delete dir="${target.classes.dir}"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="${target.classes.dir}" source="${source}" target="${target}">
            <src path="src"/>
            <src path="build/generated-sources"/>
            <classpath refid="mapster.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>

	<!--dir="${sds-ws.project}" -->
	<target name="generate-service-stubs" depends="init"
		description="Generate service stubs for each of the services that constitute the streaming data service">
		<cxf-stub-generation wsdl-file="pull_stream_service.wsdl"/>
		<!--<cxf-stub-generation wsdl-file="push_stream_service.wsdl"/>
		<cxf-stub-generation wsdl-file="subscription_manager_service.wsdl"/>-->		
	</target>

	<target name="javacc-sparqlstr">
	<javacc javacchome="lib/javacc/lib" target="lib/javacc/sparql2.jj" outputdirectory="src/es/upm/fi/dia/oeg/sparql/lang/sparqlstr"/>
	</target>
	

	<macrodef name="cxf-stub-generation">
		<attribute name="wsdl-file"/>
		<sequential>
			<java classname="org.apache.cxf.tools.wsdlto.WSDLToJava" fork="true">
				<arg value="-p"/>
				<arg value="http://www.semsorgrid4env.eu/namespace/2009/10/SDS=eu.semsorgrid4env.service.stream"/>
				<arg value="-p"/>
				<arg value="http://www.semsorgrid4env.eu/namespace/2009/10/SDS/Query=eu.semsorgrid4env.service.stream.query"/>
				<arg value="-p"/>
				<arg value="http://www.semsorgrid4env.eu/namespace/2009/10/SDS/Pull=eu.semsorgrid4env.service.stream.pull"/>
				<arg value="-p"/>
				<arg value="http://www.semsorgrid4env.eu/namespace/2009/10/SDS/Push=eu.semsorgrid4env.service.stream.push"/>
				<arg value="-p"/>
				<arg value="http://www.ggf.org/namespaces/2005/12/WS-DAI=eu.semsorgrid4env.service.wsdai"/>
<!-- Didn't seem to have the desired effect.
				<arg value="-p"/>
				<arg value="http://docs.oasis-open.org/wsn/bw-2=eu.semsorgrid4env.service.wsn"/>
				<arg value="-p"/>
				<arg value="http://docs.oasis-open.org/wsn/b-2=eu.semsorgrid4env.service.wsn"/>
				<arg value="-p"/>
				<arg value="http://docs.oasis-open.org/wsn/t-1=eu.semsorgrid4env.service.wsn.topic"/>
				<arg value="-p"/>
				<arg value="http://docs.oasis-open.org/wsrf/bf-2=eu.semsorgrid4env.service.wsrf"/>
				<arg value="-p"/>
				<arg value="http://docs.oasis-open.org/wsrf/r-2=eu.semsorgrid4env.service.wsrf"/>
				<arg value="-p"/>
				<arg value="http://docs.oasis-open.org/wsrf/rw-2=eu.semsorgrid4env.service.wsrf"/>
-->
				<!-- The noAddressBinding argument is necessary to enable the -->
				<!-- extension of WS-Addressing EndpointReferenceType in the -->
				<!-- WS-DAI Core types file to generate stubs that will compile. -->
				<!-- The JAX-WS 2.1 implementations have WS-Addressing declared -->
				<!-- as final which means that they cannot be subclassed. -->
				<arg value="-noAddressBinding"/>
<!--				<arg value="-impl"/> -->
<!--				<arg value="-client"/> -->
				<arg value="-compile"/>
				<!-- <arg value="-defaultValues"/> -->
				<arg value="-d"/>
				<arg value="${target.gen.dir}"/>
				<arg value="-classdir"/>
				<arg value="${target.classes.dir}"/>
				<arg value="${wsdl.location}/@{wsdl-file}"/>
				<classpath>
					<path refid="cxf.classpath"/>
				</classpath>
			</java>
		</sequential>
	</macrodef>

	<target name="makeSNEEjar"  
	description="Create a jar file from the source code">		
		<echo>Creating jar files</echo>
		<jar jarfile="EventSNEE.jar">
			<fileset dir="../snee/bin"
				excludes="*Testclass, *Tests.class, eu/**"/>
			<manifest>
				<attribute name="Built-By" value="${user.name}"/>
				<attribute name="Implementation-Version" value="${TODAY}"/>
				<attribute name="Class-Path" value="${classpath}"/>
			</manifest>
		</jar>
	</target>
    <target name="MapsterConnector">
        <java classname="es.upm.fi.dia.oeg.engine.MapsterConnector" failonerror="true" fork="yes">
            <arg line="input/config.props"/>
            <classpath refid="mapster.classpath"/>
        </java>
    </target>
	<target name="unit-test">
		<junit printsummary="yes" fork="yes" haltonfailure="yes">
        <sysproperty key="propsFile" value="E:/upm/src/ssg4env/mapster/input/config.props"/>
            <classpath refid="mapster.classpath"/>
		  <formatter type="plain" usefile="false"/>
		  <test name="es.upm.fi.dia.oeg.integration.test.SemanticIntegratorTest"></test>
		</junit>	
	</target>
	<target name="create-jar" >
		<!--<jar destfile="lib/ccows.jar" basedir="../cco-ws/build/classes"></jar>-->
			<jar destfile="mapster.jar"  >
				<fileset dir="${target.classes.dir}" includes="es/**"></fileset>
				<fileset dir="${target.classes.dir}" includes="config/**"></fileset>
			</jar>
		
		</target>
</project>
