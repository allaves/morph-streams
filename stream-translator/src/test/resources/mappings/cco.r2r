@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix ssg: <http://semsorgrid4env.eu/ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix ssn: <http://purl.oclc.org/NET/ssnx/ssn#> . 
@prefix cd:  <http://www.semsorgrid4env.eu/ontologies/CoastalDefences.owl#> .
@prefix dul: <http://www.loa-cnr.it/ontologies/DUL.owl#> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix regions: <http://www.semsorgrid4env.eu/ontologies/AdditionalRegions.owl#> .
@prefix morph: <http://es.upm.fi.dia.oeg/morph#> .
@prefix : <http://es.upm.fi.dia.oeg/R2RMapping#> . 

:waveFoISea	   rr:predicateMap [ rr:predicate ssn:featureOfInterest ]; 
      		   rr:objectMap    [ rr:object ssg:Sea ].
:waveObsProp   rr:predicateMap [ rr:predicate ssn:observedProperty ]; 
      		   rr:objectMap    [ rr:object cd:WaveHeight ].      		   
      		  
:MilfordWaveHeight a rr:TriplesMapClass;
	rr:SQLQuery "";
	rr:tableName "envdata_milford";
	rr:subjectMap [ rr:template "http://semsorgrid4env.eu/ns#ObservationValue/WaveHeight/CCO/{DateTime}";	
					 rr:class ssn:ObservationValue; rr:graph ssg:ccometeo.srdf ];
	rr:predicateObjectMap [ rr:predicateMap [ rr:predicate ssn:hasQuantityValue ];
							rr:objectMap	[ rr:column "Hs" ] ];     		   
.		   



:MilfordWaveResult a rr:TriplesMapClass;
	rr:SQLQuery "";
	rr:tableName "envdata_milford";
	rr:subjectMap [ rr:template "http://semsorgrid4env.eu/ns#Observation/WaveHeight/CCO/Output/{DateTime}";
				 rr:class ssn:SensorOutput; rr:graph ssg:ccometeo.srdf ];
	rr:refPredicateObjectMap [ rr:refPredicateMap [ rr:predicate ssn:hasValue ];
							   rr:refObjectMap	  [ rr:parentTriplesMap :MilfordWaveHeight; rr:joinCondition "" ] ];	   		  
.      		   

:MilfordWaveInstant a rr:TriplesMapClass;
		rr:SQLQuery ""; rr:tableName "envdata_milford";
		rr:subjectMap [ rr:template "http://semsorgrid4env.eu/ns#Observation/WaveHeight/CCO/Instant/{DateTime}";
							rr:class time:Instant; rr:graph ssg:ccometeo.srdf ];
		rr:predicateObjectMap [ rr:predicateMap [ rr:predicate time:xsdDateTime ];
								rr:objectMap	[ rr:column "timestamp" ] ];     		   		  
.
      
:MilfordWaveObservation   a rr:TriplesMapClass;
    rr:SQLQuery "";
    rr:subjectMap [	rr:template "http://semsorgrid4env.eu/ns#Observation/WaveHeight/CCO/{DateTime}";  
    				 rr:class ssn:Observation; rr:graph ssg:ccometeo.srdf ];
	rr:tableName "envdata_milford";
    rr:refPredicateObjectMap [ rr:refPredicateMap [ rr:predicate ssn:observationResult ]; 
      		   				   rr:refObjectMap    [ rr:parentTriplesMap :MilfordWaveResult; rr:joinCondition "" ]];
   
    rr:predicateObjectMap :waveFoISea;
    rr:predicateObjectMap :waveObsProp;
    rr:predicateObjectMap [ rr:predicateMap [ rr:predicate ssg:hasLatitude ]; 
      						rr:objectMap    [ rr:column "Lat" ]];
    rr:predicateObjectMap [ rr:predicateMap [ rr:predicate ssg:hasLongitude ]; 
      						rr:objectMap    [ rr:column "Lon" ]];
      						
    rr:refPredicateObjectMap[ rr:refPredicateMap [ rr:predicate ssn:observationResultTime ];
    		   				  rr:refObjectMap	 [ rr:parentTriplesMap :MilfordWaveInstant; rr:joinCondition "" ]]; 
#    		   				      [ a rr:TriplesMapClass;
#									rr:SQLQuery ""; rr:tableName "envdata_milford";
#									rr:subjectMap [ morph:columnOperation "CONCAT('http://semsorgrid4env.eu/ns#Observation/WaveHeight/CCO/Instant',DateTime)";
#													rr:column "DateTime"; rr:class time:Instant; rr:graph ssg:ccometeo.srdf ];
#									rr:predicateObjectMap [ rr:predicateMap [ rr:predicate time:xsdDateTime ];
#															rr:objectMap	[ rr:column "timestamp" ] ];     		   		  
#   		   				  		]; rr:joinCondition "" ]];      						    
 .


:MilfordSensorMap a rr:TriplesMapClass;
  	rr:SQLQuery "";
  	rr:tableName "sensors";
  	rr:subjectMap [rr:class ssn:Sensor; rr:subject ssg:MilfordSensor];
 	rr:predicateObjectMap [ rr:predicateMap [rr:predicate ssn:hasProperty];
   							rr:objectMap 	[rr:object ssg:MilfordSensorLocation] ];
.
     
:CCOSeaFOIMap a rr:TriplesMapClass;
  	rr:SQLQuery "";
  	rr:subjectMap [rr:class ssn:FeatureOfInterest;  rr:subject ssg:Sea];
  	rr:tableName "";
 	rr:predicateObjectMap [ rr:predicateMap [rr:predicate cd:locatedInRegion];
   							rr:objectMap 	[rr:object regions:SouthEastEnglandCCO] ];
.